
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.7.0
 * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
 */
Prisma.prismaVersion = {
  client: "6.7.0",
  engine: "3cff47a7f5d65c3ea74883f1d736e41d68ce91ed"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.BitacoraScalarFieldEnum = {
  id: 'id',
  usuario_id: 'usuario_id',
  rol: 'rol',
  accion: 'accion',
  ip: 'ip',
  descripcion: 'descripcion',
  fecha_inicio: 'fecha_inicio',
  fecha_act: 'fecha_act'
};

exports.Prisma.DepartamentosScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  descripcion: 'descripcion',
  activo: 'activo'
};

exports.Prisma.DocumentosScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  descripcion: 'descripcion',
  mime: 'mime',
  ruta: 'ruta',
  tipos_documentos_id: 'tipos_documentos_id',
  usuarios_id: 'usuarios_id',
  fecha_subida: 'fecha_subida'
};

exports.Prisma.PeriodosScalarFieldEnum = {
  id: 'id',
  periodo: 'periodo',
  fecha_inicio: 'fecha_inicio',
  fecha_final: 'fecha_final',
  activo: 'activo'
};

exports.Prisma.ProcesosScalarFieldEnum = {
  id: 'id',
  estatus: 'estatus',
  resultado: 'resultado',
  fecha_inicio: 'fecha_inicio',
  fecha_fin: 'fecha_fin',
  departamentos_id: 'departamentos_id',
  periodos_id: 'periodos_id'
};

exports.Prisma.RolesScalarFieldEnum = {
  id: 'id',
  tipo: 'tipo',
  descripcion: 'descripcion',
  activo: 'activo',
  fecha_creacion: 'fecha_creacion'
};

exports.Prisma.Tipos_documentosScalarFieldEnum = {
  id: 'id',
  tipo: 'tipo'
};

exports.Prisma.UsuariosScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  apellidos: 'apellidos',
  email: 'email',
  password: 'password',
  departamentos_id: 'departamentos_id',
  activo: 'activo'
};

exports.Prisma.Usuarios_has_rolesScalarFieldEnum = {
  usuarios_id: 'usuarios_id',
  roles_id: 'roles_id'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.bitacoraOrderByRelevanceFieldEnum = {
  rol: 'rol',
  accion: 'accion',
  ip: 'ip',
  descripcion: 'descripcion'
};

exports.Prisma.departamentosOrderByRelevanceFieldEnum = {
  nombre: 'nombre',
  descripcion: 'descripcion'
};

exports.Prisma.documentosOrderByRelevanceFieldEnum = {
  nombre: 'nombre',
  descripcion: 'descripcion',
  mime: 'mime',
  ruta: 'ruta'
};

exports.Prisma.periodosOrderByRelevanceFieldEnum = {
  periodo: 'periodo'
};

exports.Prisma.rolesOrderByRelevanceFieldEnum = {
  descripcion: 'descripcion'
};

exports.Prisma.tipos_documentosOrderByRelevanceFieldEnum = {
  tipo: 'tipo'
};

exports.Prisma.usuariosOrderByRelevanceFieldEnum = {
  nombre: 'nombre',
  apellidos: 'apellidos',
  email: 'email',
  password: 'password'
};
exports.procesos_estatus = exports.$Enums.procesos_estatus = {
  en_proceso: 'en_proceso',
  terminado: 'terminado'
};

exports.procesos_resultado = exports.$Enums.procesos_resultado = {
  aprobado: 'aprobado',
  rechazado: 'rechazado',
  en_revision: 'en_revision'
};

exports.roles_tipo = exports.$Enums.roles_tipo = {
  admin: 'admin',
  capturista: 'capturista',
  revisor: 'revisor'
};

exports.Prisma.ModelName = {
  bitacora: 'bitacora',
  departamentos: 'departamentos',
  documentos: 'documentos',
  periodos: 'periodos',
  procesos: 'procesos',
  roles: 'roles',
  tipos_documentos: 'tipos_documentos',
  usuarios: 'usuarios',
  usuarios_has_roles: 'usuarios_has_roles'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
